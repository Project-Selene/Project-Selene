// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSelene;

#nullable disable

namespace ProjectSelene.Migrations
{
    [DbContext(typeof(SeleneDbContext))]
    [Migration("20240719113316_DoNotRequireDownloadInDraft")]
    partial class DoNotRequireDownloadInDraft
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ProjectSelene.Models.Artifact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("ProjectSelene.Models.Mod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModInfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("Guid");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ModInfoId")
                        .IsUnique();

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("ProjectSelene.Models.ModInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModInfo");
                });

            modelBuilder.Entity("ProjectSelene.Models.ModVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloadId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubmittedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("VerifiedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("VerifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DownloadId");

                    b.HasIndex("ModId");

                    b.HasIndex("SubmittedById");

                    b.HasIndex("VerifiedById");

                    b.ToTable("ModVersions");
                });

            modelBuilder.Entity("ProjectSelene.Models.ModVersionDraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SubmittedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DownloadId");

                    b.HasIndex("ModId");

                    b.ToTable("ModVersionDrafts");
                });

            modelBuilder.Entity("ProjectSelene.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GithubId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId");

                    b.HasIndex("GithubId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectSelene.Models.Artifact", b =>
                {
                    b.HasOne("ProjectSelene.Models.User", "Owner")
                        .WithMany("Artifacts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ProjectSelene.Models.Mod", b =>
                {
                    b.HasOne("ProjectSelene.Models.User", "Author")
                        .WithMany("Mods")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSelene.Models.ModInfo", "Info")
                        .WithOne()
                        .HasForeignKey("ProjectSelene.Models.Mod", "ModInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("ProjectSelene.Models.ModVersion", b =>
                {
                    b.HasOne("ProjectSelene.Models.Artifact", "Download")
                        .WithMany("ModVersions")
                        .HasForeignKey("DownloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSelene.Models.Mod", "Mod")
                        .WithMany("Versions")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSelene.Models.User", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSelene.Models.User", "VerifiedBy")
                        .WithMany()
                        .HasForeignKey("VerifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Download");

                    b.Navigation("Mod");

                    b.Navigation("SubmittedBy");

                    b.Navigation("VerifiedBy");
                });

            modelBuilder.Entity("ProjectSelene.Models.ModVersionDraft", b =>
                {
                    b.HasOne("ProjectSelene.Models.User", "CreatedBy")
                        .WithMany("ModVersionDrafts")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectSelene.Models.Artifact", "Download")
                        .WithMany("ModVersionDrafts")
                        .HasForeignKey("DownloadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectSelene.Models.Mod", "Mod")
                        .WithMany("VersionDrafts")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Download");

                    b.Navigation("Mod");
                });

            modelBuilder.Entity("ProjectSelene.Models.Artifact", b =>
                {
                    b.Navigation("ModVersionDrafts");

                    b.Navigation("ModVersions");
                });

            modelBuilder.Entity("ProjectSelene.Models.Mod", b =>
                {
                    b.Navigation("VersionDrafts");

                    b.Navigation("Versions");
                });

            modelBuilder.Entity("ProjectSelene.Models.User", b =>
                {
                    b.Navigation("Artifacts");

                    b.Navigation("ModVersionDrafts");

                    b.Navigation("Mods");
                });
#pragma warning restore 612, 618
        }
    }
}
