// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSelene;

#nullable disable

namespace ProjectSelene.Migrations
{
    [DbContext(typeof(SeleneDbContext))]
    [Migration("20220410155145_BaseLayout")]
    partial class BaseLayout
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjectSelene.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GithubId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectSelene.Models.User", b =>
                {
                    b.OwnsMany("ProjectSelene.Models.Mod", "Mods", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<int>("AuthorId")
                                .HasColumnType("int");

                            b1.Property<int>("ModInfoId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("AuthorId");

                            b1.ToTable("Mod");

                            b1.WithOwner("Author")
                                .HasForeignKey("AuthorId");

                            b1.OwnsOne("ProjectSelene.Models.ModInfo", "Info", b2 =>
                                {
                                    b2.Property<int>("ModId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.HasKey("ModId");

                                    b2.ToTable("Mod");

                                    b2.WithOwner()
                                        .HasForeignKey("ModId");
                                });

                            b1.OwnsMany("ProjectSelene.Models.ModVersion", "Versions", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<int>("OwnedById")
                                        .HasColumnType("int");

                                    b2.Property<int>("SubmittedById")
                                        .HasColumnType("int");

                                    b2.Property<DateTime>("SubmittedOn")
                                        .HasColumnType("datetime(6)");

                                    b2.Property<int?>("VerifiedById")
                                        .HasColumnType("int");

                                    b2.Property<string>("Version")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.HasKey("Id");

                                    b2.HasIndex("OwnedById");

                                    b2.HasIndex("SubmittedById");

                                    b2.HasIndex("VerifiedById");

                                    b2.ToTable("ModVersion");

                                    b2.WithOwner("OwnedBy")
                                        .HasForeignKey("OwnedById");

                                    b2.HasOne("ProjectSelene.Models.User", "SubmittedBy")
                                        .WithMany()
                                        .HasForeignKey("SubmittedById")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b2.HasOne("ProjectSelene.Models.User", "VerifiedBy")
                                        .WithMany()
                                        .HasForeignKey("VerifiedById");

                                    b2.OwnsMany("ProjectSelene.Models.Artifact", "Artifacts", b3 =>
                                        {
                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            b3.Property<int>("ModVersionId")
                                                .HasColumnType("int");

                                            b3.Property<string>("Url")
                                                .IsRequired()
                                                .HasColumnType("longtext");

                                            b3.HasKey("Id");

                                            b3.HasIndex("ModVersionId");

                                            b3.ToTable("Artifact");

                                            b3.WithOwner()
                                                .HasForeignKey("ModVersionId");
                                        });

                                    b2.Navigation("Artifacts");

                                    b2.Navigation("OwnedBy");

                                    b2.Navigation("SubmittedBy");

                                    b2.Navigation("VerifiedBy");
                                });

                            b1.Navigation("Author");

                            b1.Navigation("Info")
                                .IsRequired();

                            b1.Navigation("Versions");
                        });

                    b.Navigation("Mods");
                });
#pragma warning restore 612, 618
        }
    }
}
